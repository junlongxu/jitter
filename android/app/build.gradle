def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        applicationId "com.example.jitter"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        rxhttp_okhttp: '4.8.1',
                        rxhttp_rxjava: 'rxjava3'
                ]
            }
        }
    }

    signingConfigs {
        release {
            storeFile file('D:\\Android\\globaltv.jks')
            storePassword 'globaltv2020'
            keyPassword 'globaltv2020'
            keyAlias 'globaltv'
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'

    kapt 'com.ljx.rxhttp:rxhttp-compiler:2.3.5'
    implementation 'com.airbnb.android:lottie:3.4.2'
    implementation 'com.ljx.rxhttp:rxhttp:2.3.5'
    implementation 'com.squareup.okhttp3:okhttp:4.8.1'
    implementation 'io.reactivex.rxjava3:rxjava:3.0.6'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.ljx.rxlife3:rxlife-rxjava:3.0.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.12'
    //Adapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'

    //图片选择
    implementation 'com.zhihu.android:matisse:0.5.2'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.googlecode.mp4parser:isoparser:1.1.22'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // kotlin协程
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9"
    implementation 'com.google.code.gson:gson:2.8.6'
    //  轮盘日期、地区选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'com.google.android.material:material:1.2.1'
}
allprojects {
    repositories {
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url 'http://www.akixr.top:9000/bucket1-dev/' }
    }
}
